<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Jason Meridth's Blog (gitosis)</title><link>http://blog.jasonmeridth.com/</link><description></description><atom:link href="http://blog.jasonmeridth.com/categories/gitosis.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Mon, 24 Feb 2014 21:51:41 GMT</lastBuildDate><generator>Nikola &lt;http://getnikola.com/&gt;</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Gotcha with Gitosis and python-setuptools</title><link>http://blog.jasonmeridth.com/posts/gotcha-with-gitosis-and-python-setuptools/</link><description>&lt;div&gt;&lt;p&gt;Today I decided to upgrade my slicehost slice from Intrepid Ibex to Lucid Lynx (Intrepid → Jaunty → Karmic → Lucid). Yeah, yeah, I’m a little behind. Anyways, It upgraded just fine. However when I was trying to push code to my gitosis instance (which I installed over a year ago), I got the following stack trace:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-27-at-12.06.50-AM.png"&gt;&lt;/p&gt;
&lt;p&gt;This told me that I had been using python-setuptools for python 2.5. A little googling and praying that I wouldn’t have to roll back to the snapshot I took before I started the upgrade (Thank God!), I found the solution. I went onto the gitosis slice, cloned the gitosis repository:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-27-at-12.07.06-AM.png"&gt;&lt;/p&gt;
&lt;p&gt;and then ran the setup again:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-27-at-12.09.48-AM.png"&gt;&lt;/p&gt;
&lt;p&gt;and it fixed the issue. Did I mention how much I love google. Hope this helps someone else.&lt;/p&gt;
&lt;h3&gt;Comments&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blog.jasonmeridth.com/posts/gotcha-with-gitosis-and-python-setuptools/#484" title="2010-08-22 22:11:46"&gt;kathleen s.&lt;/a&gt;:&lt;/strong&gt; HI--This is about your blog on removing the Hard Drive of a Dell Dimension 3000. I think its closed for comments now, but I wanted to thank you for posting how to do it or I would've been lost. I am a technotard. Thanks again.&lt;/p&gt;&lt;/div&gt;</description><category>git</category><category>gitosis</category><guid>http://blog.jasonmeridth.com/posts/gotcha-with-gitosis-and-python-setuptools/</guid><pubDate>Wed, 26 May 2010 09:58:00 GMT</pubDate></item><item><title>Gitosis and Gitweb - Part 3</title><link>http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-3/</link><description>&lt;div&gt;&lt;p&gt;&lt;a href="http://blog.jasonmeridth.com/blogs/jason_meridth/archive/2010/05/24/gitosis-and-gitweb-part-1-setup.aspx"&gt;Gitosis and Gitweb – Part 1&lt;br&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.jasonmeridth.com/blogs/jason_meridth/archive/2010/05/24/gitosis-and-gitweb-part-2-add-projects-and-contributors.aspx"&gt;Gitosis and Gitweb – Part 2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So we are setup, have a project, and have contributors via the first 2 parts.&lt;/p&gt;
&lt;p&gt;I know that we are all enamored by the UI of &lt;a href="http://github.com"&gt;GitHub.com&lt;/a&gt;. I am. Unfortunately you can’t get private repositories for free (In all fairness it’s only $7/mo. – a &lt;em&gt;very&lt;/em&gt; wise investment). I am aware of &lt;a href="http://gitorious.com"&gt;Gitorious&lt;/a&gt; like I mentioned in the first part, but I have no experience with that. I will after this series and update this series if I find it better. Again, I like to use the simplest thing that works. (Of course, “simplest” is in the eye of the beholder)&lt;/p&gt;
&lt;p&gt;In this section I’m going to show you how to install Gitweb, a UI tool that let’s you view your repositories. I’m also going to mention how to get it to auto-detect any new repositories and ensure they show up on the web UI. I learned how to do most of this from my co-worker &lt;a href="http://twitter.com/ajmesserli"&gt;Antony Messerli&lt;/a&gt;. He is a true Linux and problem-solving Jedi.&lt;/p&gt;
&lt;h3&gt;Install Apache&lt;/h3&gt;
&lt;p&gt;First, you need to ensure apache2 is installed. Check to see if you have an /etc/apache2 folder. If you do, you should be okay. If you don’t, you need to install it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-26-at-11.47.15-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;For more in-depth advice, I always reference the &lt;a href="http://articles.slicehost.com/2010/5/19/installing-apache-on-ubuntu"&gt;Slicehost Articles&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once you have that installed the daemon restarted, go to your slices ip address in the browser of your choice (i.e,. http://123.123.123.123) and you should something like “It Works”&lt;/p&gt;
&lt;p&gt;Voila! You have apache running.&lt;/p&gt;
&lt;h3&gt;Install the Package&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-26-at-11.47.22-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;This will install gitweb into /var/www/gitweb, create a conf file at /etc/gitweb.conf, and add three files to /usr/share/gitweb (git-favicon.png, git-logo.png, gitweb.css).&lt;/p&gt;
&lt;p&gt;Note: If for some reason, the /var/www/gitweb folder &lt;em&gt;is not&lt;/em&gt; created, you can clone the git source (git clone git://git.kernel.org/pub/scm/git/git.git) and then just copy the git/gitweb folder to /var/www/gitweb&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-26-at-11.47.28-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;You only need to edit the $projectroot variable in the /etc/gitweb.conf to point to your gitosis repositories folder:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-26-at-11.47.34-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;Since this isn’t a post about Apache, I just add the gitweb directory setup to the base Apache config. Since Ubuntu includes the entire /etc/apache2/conf.d directory, I just added the following information into /etc/apach2/conf.d/gitweb:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-26-at-11.47.44-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;Restart Apache to make sure everything works&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-26-at-11.47.52-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;The first time you go to your website again, you’ll see Gitweb, but it’ll say no projects are available. Fix mentioned below.&lt;/p&gt;
&lt;h4&gt;Two Hacks (open to suggestions)&lt;/h4&gt;
&lt;p&gt;1. I had to copy the git-favicon.png, git-logo.png, gitweb.css files from /usr/share/gitweb to /var/www/gitweb/. (if you had to do what is mentioned in the Note above, you don’t have to do this, since the gitweb folder from the git source clone includes these files already)&lt;/p&gt;
&lt;p&gt;2. I had to make the repositories that I wanted visible in gitweb have permissions of 755 (aka owner has read, write, execute. group and others have read, execute.)&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-26-at-11.47.58-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;Once that was done I can see the repository and it’s information on Gitweb.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-26-at-11.48.07-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;If you want to edit the project description from "Unnamed repository; edit this file 'description' to name the repository." go to the repositories description file (/home/git/repositories/          lostechies.git/description for this repo) and edit the file and save.&lt;/p&gt;
&lt;h4&gt;Cron job&lt;/h4&gt;
&lt;p&gt;I, again with the leadership of Ant, utilized a cron job he wrote to automatically make the repositories have permissions of 755. I do have some repositories, like gitosis-admin, that I do not ever want visible on Gitweb. The cron job excludes them. Here is the cron job code, showing that I don’t want to show my personal.git and gitosis-admin.git repositories. This could be easily written in Ruby or any other “scripting language” of your choice:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-26-at-11.48.19-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;I chose bash, so that I could take that time to learn it.&lt;br&gt;
Translation: Find all the directories in my gitosis repository path (/home/git/repositories) and if they are not gitosis-admin or personal, change their permissions, recursively, to 0755.&lt;/p&gt;
&lt;p&gt;I put this in a file called set_gitosis_permissions_to_view_on_gitweb.sh and put it in root’s home folder, /root. I then called the file from root’s crontab:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-26-at-11.48.26-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;This means that every 5 minutes, my bash file will set any new repositories to 0755. This is how to get Gitweb stood up. The next post will show how to hide it behind HTTP basic auth and a self-signed certificate.&lt;/p&gt;
&lt;p&gt;Next Part: Hiding the Gitweb site&lt;/p&gt;
&lt;h3&gt;Comments&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-3/#483" title="2010-07-09 22:07:08"&gt;katy lavallee&lt;/a&gt;:&lt;/strong&gt; Anxiously awaiting the next part :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-3/#513" title="2011-11-05 01:16:00"&gt;Thorpe&lt;/a&gt;:&lt;/strong&gt; You said you chose Bash so that you could take some time to learn it. Unfortunately however, your shebang points to sh not bash. There is some differences.&lt;/p&gt;&lt;/div&gt;</description><category>git</category><category>gitosis</category><guid>http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-3/</guid><pubDate>Wed, 26 May 2010 09:45:00 GMT</pubDate></item><item><title>Gitosis and Gitweb - Part 2 - Add Projects and Contributors</title><link>http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-2/</link><description>&lt;div&gt;&lt;p&gt;&lt;a href="http://blog.jasonmeridth.com/blogs/jason_meridth/archive/2010/05/24/gitosis-and-gitweb-part-1-setup.aspx"&gt;Gitosis and Gitweb – Part 1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So we are setup now thanks to Part 1.&lt;/p&gt;
&lt;h3&gt;Gitosis repository contents&lt;/h3&gt;
&lt;p&gt;If we issue the “find .” command locally inside the gitosis-admin directory we will see the following:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-24-at-10.11.04-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;We have the .git folder, a gitosis.conf file, and a keydir with a pub key file.&lt;/p&gt;
&lt;h3&gt;Add our first project&lt;/h3&gt;
&lt;p&gt;Our project name for this example is lostechies. If you view the gitosis-admin.conf file you will see the initial content like so:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-24-at-10.11.11-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;This is the result of the following command from the last part:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-24-at-10.11.20-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;That command puts the public ssh key into the keydirs directory and adds the associated username from the file to be the first member of the gisotis-admin project. Hence seeing user@local as the member. It matches the filename of the pub file in the keydir directory (user@local.pub). That’s how gitosis relates members listed in the conf file to the keys in the keydir directory, filename minus the pub extension.&lt;/p&gt;
&lt;p&gt;Let’s edit this conf file to include our lostechies project:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-24-at-10.11.27-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;It looks exactly like the gitosis-admin one. Now we commit it just like we would normally when using Git. We can add, then commit or commit with the -am argument. This is possible since the gitosis-admin.conf file is already tracked by the repository.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-24-at-10.14.06-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;and push it to the remote gitosis-admin repository:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-24-at-10.14.12-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;We need to create the lostechies repository locally, add an initial item (README in this case), and push it remotely. Gitosis won’t create the repository until something it pushed to it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-24-at-10.14.20-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;The lostechies repository now exists remotely. Currently my account is the only that has access. Let’s add another contributor.&lt;/p&gt;
&lt;h3&gt;Add our first contributors&lt;/h3&gt;
&lt;p&gt;Say I want to allow my friend Joe to have commit (writable) access to my lostechies repository and I want my friend Ryan to only have readonly access. I tell them to send me their public ssh keys. I make sure the files are named joe.pub and ryan.pub. I then put them into my local gitosis-admin repository’s keydir directory and then I edit the gitosis.conf file to be:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-24-at-10.14.27-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;Notice that I had to create a whole new group (lostechies_ro) to setup Ryan’s readonly access. You can’t combine readonly and writable permissions in gitosis (wish we could – open source contribution there?).&lt;/p&gt;
&lt;p&gt;Now I need to “git add” the new keys, and commit the changes to the conf file. Finally I push the changes.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-24-at-10.14.36-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;Now Joe or Ryan can clone this repository:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-24-at-10.14.43-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/em&gt; Again, if they receive the following error:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-24-at-10.14.50-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;The solution, involving the .ssh/config file is in the first post in this series.&lt;/p&gt;
&lt;p&gt;That is how you create a repository and add users.&lt;/p&gt;
&lt;h3&gt;DEBUG&lt;/h3&gt;
&lt;p&gt;If you are unable to connect you have the option of editing the gitosis.conf file with more message verbosity by adding “loglevel=DEBUG” at the top of the conf file:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-24-at-10.14.58-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;This will give you more information on the ouput when trying to push to the remote repository.&lt;/p&gt;
&lt;h3&gt;Can’t push changes&lt;/h3&gt;
&lt;p&gt;As Scott Chacon states in his gitosis section of &lt;a href="http://progit.org/book/ch4-7.html"&gt;Pro Git&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“If you’ve lost push access by pushing a messed-up configuration, you can manually fix the file on the server under /home/git/.gitosis.conf — the file from which Gitosis reads its info. A push to the project takes the gitosis.conf file you just pushed up and sticks it there. If you edit that file manually, it remains like that until the next successful push to the gitosis-admin project.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The .gitosis.conf file in the git user’s home directory is a symlink to the actual conf file in the gitosis-admin repository:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://lostechies.com/jasonmeridth/files/2011/03/Screen-shot-2010-05-24-at-10.15.03-PM.png"&gt;&lt;/p&gt;
&lt;p&gt;Next Part: Gitweb&lt;/p&gt;
&lt;h3&gt;Comments&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-2/#478" title="2010-05-25 12:51:54"&gt;Gabriel N. Schenker&lt;/a&gt;:&lt;/strong&gt; your post come in handy; just at the right time! Very nicely done, thanks&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-2/#479" title="2010-07-24 22:06:27"&gt;colvertlyn&lt;/a&gt;:&lt;/strong&gt; permafrost expected action cover &lt;a href="http://gravity.wikia.com"&gt;million per absolute broadly&lt;/a&gt; [url=http://www.skyandtelescope.com]emission small glacial observational[/url] http://www.nal.usda.gov&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-2/#480" title="2010-07-24 22:06:47"&gt;salfordwil&lt;/a&gt;:&lt;/strong&gt; volunteer physical llc&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-2/#481" title="2010-08-21 08:53:11"&gt;ashlynnega&lt;/a&gt;:&lt;/strong&gt; increased link &lt;a href="http://www.unesco.org"&gt;rise sectors windows past&lt;/a&gt; [url=http://water.usgs.gov]videos comment president android[/url] http://www.newswire.ca&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-2/#482" title="2010-08-21 08:53:28"&gt;garrmankor&lt;/a&gt;:&lt;/strong&gt; economy regions hypothesis special&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-2/#496" title="2011-05-12 10:24:00"&gt;Mullins&lt;/a&gt;:&lt;/strong&gt; After creating the losttechies repository locally I needed to create the remote 'origin' by executing: $ git remote add origin git@MYSERVER.com:losttechies.git&lt;/p&gt;&lt;/div&gt;</description><category>git</category><category>gitosis</category><guid>http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-2/</guid><pubDate>Tue, 25 May 2010 08:02:00 GMT</pubDate></item><item><title>Gitosis and Gitweb - Part 1 - Setup</title><link>http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-1/</link><description>&lt;div&gt;&lt;p&gt;I’ve had a number of people ask me where they should host their Git repositories. Of course, my default question back is, “Can the code be public or does it need to be private?”. Usually they say, “public”. Therefore, my repsonse is &lt;a href="http://github.com"&gt;Github.com&lt;/a&gt;. If they say, “private” I still say Github.  If they don't &lt;a href="http://github.com/security"&gt;"trust" Github&lt;/a&gt;, which they should - click the link, then my response is &lt;a href="http://eagain.net/gitweb/?p=gitosis.git;a=summary"&gt;Gitosis&lt;/a&gt; and &lt;a href="http://git.wiki.kernel.org/index.php/Gitweb"&gt;Gitweb&lt;/a&gt;. This is by no means the only solution. I’m aware of other ones like Gitorious. I’ve never used Gitorious.&lt;/p&gt;
&lt;p&gt;Back to Gitosis. My personal Gitosis server is a slice at &lt;a href="http://slicehost.com"&gt;Slicehost.com&lt;/a&gt;. You can use an Ubuntu server at home as long as you have remote access. I’ve personally only used Gitosis with an Ubuntu slice, so I don’t know if there are any quirks with other Linux distributions. After setting up a slice (after following the instructions &lt;a href="http://articles.slicehost.com/2008/11/28/ubuntu-intrepid-setup-page-1"&gt;here&lt;/a&gt; and &lt;a href="http://articles.slicehost.com/2008/11/28/ubuntu-intrepid-setup-page-2"&gt;here&lt;/a&gt;) I am ready to go.&lt;/p&gt;
&lt;p&gt;Notice: This post is a combination of &lt;a href="http://scie.nti.st/2007/11/14/hosting-git-repositories-the-easy-and-secure-way"&gt;scie.nti.st’s gitosis post&lt;/a&gt; and &lt;a href="http://progit.org/book/ch4-7.html"&gt;Scott Chacon’s Pro Git gitosis section&lt;/a&gt;. They are my de facto references. Maybe my own will be now. :)&lt;/p&gt;
&lt;p&gt;“Enough talk. Let’s fight” ~Po, Kung Fu Panda&lt;/p&gt;
&lt;h3&gt;Intall Git&lt;/h3&gt;
&lt;p&gt;After logging into your box, let’s install Git (if not already installed):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install git-core
...
After this operation, 16.3MB of additional disk space will be used.
Do you want to &lt;span class="k"&gt;continue&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Press enter or type ‘Y’ and press enter and git will be installed. Type the following to confirm:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;~ &amp;gt; git --version
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and you’ll see something like:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;~ &amp;gt; git --version
git version 1.6.3.3
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Intall python-setuptools&lt;/h3&gt;
&lt;p&gt;Also install the python-setuptools because we’ll need them (gitosis is written in python):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;apt-get install python-setuptools
...
After this operation, 1126kB of additonal disk space will be used.
Do you want to &lt;span class="k"&gt;continue&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt;?
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Press enter or type ‘Y’ and press enter and python-setuptools will be installed.&lt;/p&gt;
&lt;h3&gt;Download Gitosis&lt;/h3&gt;
&lt;p&gt;We need to clone the gitosis source locally to install it:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir src &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;src
~/src &lt;span class="nv"&gt;$ &lt;/span&gt;git clone git://eagain.net/gitosis.git
Initialized empty Git repository in /root/src/gitosis/.git/
remote: Counting objects: 614, &lt;span class="k"&gt;done&lt;/span&gt;.
remote: Compressing objects: 100% &lt;span class="o"&gt;(&lt;/span&gt;183/183&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
remote: Total 614 &lt;span class="o"&gt;(&lt;/span&gt;delta 434&lt;span class="o"&gt;)&lt;/span&gt;, reused 594 &lt;span class="o"&gt;(&lt;/span&gt;delta 422&lt;span class="o"&gt;)&lt;/span&gt;
Receiving objects: 100% &lt;span class="o"&gt;(&lt;/span&gt;614/614&lt;span class="o"&gt;)&lt;/span&gt;, 93.82 KiB, &lt;span class="k"&gt;done&lt;/span&gt;.
Resolving deltas: 100% &lt;span class="o"&gt;(&lt;/span&gt;434/434&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install Gitosis&lt;/h3&gt;
&lt;p&gt;Now let’s install it:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;~/src &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;gitosis
~/src/gitosis &lt;span class="nv"&gt;$ &lt;/span&gt;python setup.py install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://gist.github.com/jmeridth/352769"&gt;Result of Installation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gitosis is now installed. Next steps are to create git user and handle a file permission on a git hook.&lt;/p&gt;
&lt;h3&gt;Create Git User&lt;/h3&gt;
&lt;div class="code"&gt;&lt;pre&gt;sudo adduser &lt;span class="se"&gt;\&lt;/span&gt;
    --system &lt;span class="se"&gt;\&lt;/span&gt;
    --shell /bin/bash &lt;span class="se"&gt;\&lt;/span&gt;
    --gecos &lt;span class="s1"&gt;'git version control'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    --group &lt;span class="se"&gt;\&lt;/span&gt;
    --disabled-password &lt;span class="se"&gt;\&lt;/span&gt;
    --home /home/git &lt;span class="se"&gt;\&lt;/span&gt;
    git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You’ll see something like the following if it is successful&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;Adding system user &lt;span class="s1"&gt;'git'&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;UID 103&lt;span class="o"&gt;)&lt;/span&gt; ...
Adding new group &lt;span class="s1"&gt;'git'&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;GID 105&lt;span class="o"&gt;)&lt;/span&gt; ...
Adding new user &lt;span class="s1"&gt;'git'&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;UID 103&lt;span class="o"&gt;)&lt;/span&gt; with group &lt;span class="s1"&gt;'git'&lt;/span&gt; ...
Creating home directory &lt;span class="s1"&gt;'/home/git'&lt;/span&gt; ...
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Use local, public ssh key&lt;/h3&gt;
&lt;p&gt;You need to initially use your public ssh key (id_rsa.pub). If you have one, it will be at $HOME/.ssh/id_rsa.pub and if you have never generated one, you can do so by running the following command (accept the default location and you don’t need to enter a passphrase when prompted):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;ssh-keygen -t rsa
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you need to upload it to the server/slice. I usually use the scp (secure copy command):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;scp &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.ssh/id_rsa.pub user@123.123.123.123:/tmp/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will upload the local id_rsa.pub file to the /tmp/ folder on the server. Why there? So that the git user can use it. How is that possible? The folder has permissions of 777 (drwxrwxrwt) meaning everyone has read and write access to it.&lt;/p&gt;
&lt;h4&gt;Sidenote: SSH Port&lt;/h4&gt;
&lt;p&gt;If you have your sshd daemon running on a different port other than 22 (which is the default, but I highly suggest changing), then you need to use scp like this:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;scp -P 12345 &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.ssh/id_rsa.pub user@123.123.123.123:/tmp/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I believe the “-P” option must be capitalized.&lt;/p&gt;
&lt;h3&gt;Initialize gitosis-admin repository&lt;/h3&gt;
&lt;p&gt;On the server, issue the following command to set your public ssh key as the first authorized key of a new gitosis-admin repository:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;sudo -H -u git gitosis-init &amp;lt; /tmp/id_rsa.pub
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You will see something like the following:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;~ &lt;span class="nv"&gt;$ &lt;/span&gt;sudo -H -u git gitosis-init &amp;lt; /tmp/id_rsa.pub
Initialized empty Git repository in /home/git/repositories/gitosis-admin.git/
Reinitialized existing Git repository in /home/git/repositories/gitosis-admin.git/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This means it was successful.&lt;/p&gt;
&lt;p&gt;Take note: If you put your id_rsa.pub file in a different location you need to use that instead of /tmp/id_rsa.pub&lt;/p&gt;
&lt;h3&gt;Change Permissions on post-update hook&lt;/h3&gt;
&lt;p&gt;You have to set the permissions on the post-update git hook of the gitosis-admin repository so that gitosis-admin can add new repository structures when they are added/removed to/from the gitosis.conf file.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;sudo chmod 7555 /home/git/repositories/gitosis-admin.git/hooks/post-update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note: &lt;em&gt;First round of this post, I didn’t make this change. When I added a new project, it failed because this hook didn’t have the right permissions.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Clone gitosis-admin repository&lt;/h3&gt;
&lt;p&gt;Now we’re going to use Git to administrate this gitosis instance. I think that is pretty ingenius. Let’s clone the gitosis-admin repository locally:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;~ &amp;gt; git clone git@YOUR_SERVER_HOSTNAME:gitosis-admin.git
Initialized empty Git repository in /Users/user/gitosis-admin/.git/
remote: Counting objects: 5, &lt;span class="k"&gt;done&lt;/span&gt;.
remote: Compressing objects: 100% &lt;span class="o"&gt;(&lt;/span&gt;4/4&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
Receiving objects: 100% &lt;span class="o"&gt;(&lt;/span&gt;5/5&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
Resolving deltas: 100% &lt;span class="o"&gt;(&lt;/span&gt;1/1&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
remote: Total 5 &lt;span class="o"&gt;(&lt;/span&gt;delta 1&lt;span class="o"&gt;)&lt;/span&gt;, reused 5 &lt;span class="o"&gt;(&lt;/span&gt;delta 1&lt;span class="o"&gt;)&lt;/span&gt;
~ &amp;gt; &lt;span class="nb"&gt;cd &lt;/span&gt;gitosis-admin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We are now in the gitosis-admin repository folder locally&lt;/p&gt;
&lt;h4&gt;Two most common errors&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;FIRST ONE:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;~ &amp;gt; git clone git@YOUR_SERVER_HOSTNAME:gitosis-admin.git
Initialzed empty Git repository in /Users/user/gitosis-admin/.git/
ssh: connect to host YOUR_SERVER_HOSTNAME port 22: Connection refused
fatal: The remote end hung up unexpectedly
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;it is because you have used a port for SSH other than port 22 (the default). To fix this, you need to edit your .ssh/config file and add the following:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;Host YOUR_SERVER_HOSTNAME
Port YOUR_PORT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course, you need to put in your server hostname and port number (i.e., mydomain.com and 12345)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SECOND ONE:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;~ &amp;gt; git clone git@YOUR_SERVER_HOSTNAME:gitosis-admin.git
Initialzed empty Git repository in /Users/user/gitosis-admin/.git/
Permission denied &lt;span class="o"&gt;(&lt;/span&gt;publickey&lt;span class="o"&gt;)&lt;/span&gt;.
fatal: The remote end hung up unexpectedly
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This has usually hit me because I locked down my /etc/ssh/sshd_config file to only allow in certain users or groups. I have to change the AllowUsers line in my file from:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;AllowUsers jmeridth
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;AllowUsers jmeridth git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once I restart the ssh daemon:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;~ &amp;gt; sudo /etc/init.d/ssh restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now the git user has access to reach my server/slice via ssh.&lt;/p&gt;
&lt;h4&gt;The local gitosis-admin repository&lt;/h4&gt;
&lt;p&gt;You now have a local clone of the gitosis-admin repository. The contents are only a conf file and key directory:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;~/gitosis-admin&lt;span class="o"&gt;(&lt;/span&gt;master&lt;span class="o"&gt;)&lt;/span&gt; &amp;gt; ls
total 8
-rw-r--r-- 1 user staff  1148 May 22 21:31 gitosis.conf
drwxr-xr-x 3 user staff  1028 May 22 21:31 keydir
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><category>git</category><category>gitosis</category><guid>http://blog.jasonmeridth.com/posts/gitosis-and-gitweb-part-1/</guid><pubDate>Tue, 25 May 2010 07:42:00 GMT</pubDate></item></channel></rss>