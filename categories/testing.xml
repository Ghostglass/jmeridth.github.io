<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Jason Meridth's Blog (testing)</title><link>http://blog.jasonmeridth.com/</link><description></description><language>en</language><lastBuildDate>Fri, 08 Aug 2014 16:42:03 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>How to Run a Single Test With Tox</title><link>http://blog.jasonmeridth.com/posts/how-to-run-a-single-test-with-tox/</link><dc:creator>Jason Meridth</dc:creator><description>&lt;p&gt;I have to run a single python test once in a while and keep forgetting how to do it with Tox.&lt;/p&gt;
&lt;p&gt;Here it is:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;tox -e py27 -- project_name_here/tests/folder_name1_here/folder_name2_here/test_file_name_here.py:TestClassName.test_method_name
&lt;/pre&gt;


&lt;p&gt;Hope this helps someone else.&lt;/p&gt;
&lt;p&gt;Happy bit twiddling.&lt;/p&gt;</description><category>cli</category><category>python</category><category>testing</category><guid>http://blog.jasonmeridth.com/posts/how-to-run-a-single-test-with-tox/</guid><pubDate>Fri, 07 Mar 2014 10:49:53 GMT</pubDate></item><item><title>Run a Specific RSpec Spec</title><link>http://blog.jasonmeridth.com/posts/run-a-specific-rspec-spec/</link><dc:creator>Jason Meridth</dc:creator><description>&lt;p&gt;Tired of looking this up and want to use my writing part of my brain to blog it:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;rake spec &lt;span class="nv"&gt;SPEC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;spec/controllers/sessions_controller_spec.rb &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nv"&gt;SPEC_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"-e \"should log in with cookie\""&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;This is importatnt to me while coding Rails because if I just run&lt;/p&gt;
&lt;pre class="code literal-block"&gt;rspec specs/controllers/sessions_controller_spec.rb
&lt;/pre&gt;


&lt;p&gt;the test database isn’t cleared out. By running &lt;code&gt;rake spec&lt;/code&gt; I get that.  &lt;/p&gt;</description><category>rspec</category><category>testing</category><category>tools</category><guid>http://blog.jasonmeridth.com/posts/run-a-specific-rspec-spec/</guid><pubDate>Sat, 23 Mar 2013 05:00:00 GMT</pubDate></item><item><title>How to Capture the Exception Message From Assert.Throws in NUnit</title><link>http://blog.jasonmeridth.com/posts/how-to-capture-exception-message-from-assert-throws/</link><dc:creator>Jason Meridth</dc:creator><description>&lt;p&gt;In the past I’ve used:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="na"&gt;[ExpectedException(typeof(CustomException), ExpectedMessage="blah blah blah")]&lt;/span&gt; 
&lt;/pre&gt;


&lt;p&gt;to set an exception expectation and assert on the message. With the recent releases of NUnit I’ve finally transitioned all my code to use:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;Assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Throws&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;CustomException&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;someType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;someMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;someValue&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;or&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;Assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Throws&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;CustomException&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;someType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;someMethod&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;if the method has no parameters.&lt;/p&gt;
&lt;p&gt;Only lately have I needed to capture the exception message and validate it. To do this you do the following:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Throws&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;CustomException&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;someType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;someMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;someValue&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="n"&gt;Assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;That&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Is&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EqualTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"expected message here"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;I am blogging about this because I keep forgetting how to capture the exception message. Hope it helps someone else.&lt;/p&gt;</description><category>.net</category><category>testing</category><guid>http://blog.jasonmeridth.com/posts/how-to-capture-exception-message-from-assert-throws/</guid><pubDate>Fri, 23 Mar 2012 05:00:00 GMT</pubDate></item></channel></rss>