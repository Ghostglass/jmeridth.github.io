<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Jason Meridth's Blog (github)</title><link>http://blog.jasonmeridth.com/</link><description></description><language>en</language><lastBuildDate>Fri, 29 Aug 2014 14:08:02 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Do Not Issue Pull Requests From Your Master Branch</title><link>http://blog.jasonmeridth.com/posts/do-not-issue-pull-requests-from-your-master-branch/</link><dc:creator>Jason Meridth</dc:creator><description>&lt;p&gt;&lt;strong&gt;PROBLEM:&lt;/strong&gt; You do not want to issue pull requests from your fork’s master branch on &lt;a href="http://github.com"&gt;Github.com&lt;/a&gt; to the parent repisitory because any new changes you add to the master branch will &lt;strong&gt;&lt;em&gt;automatically&lt;/em&gt;&lt;/strong&gt; show up in the pull request. That means changes you did not intend to be there, would now be there.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SOLUTION:&lt;/strong&gt; Issue your pull requests from a feature/topic branch&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BAD SCENARIO:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fork repo ABC&lt;/li&gt;
&lt;li&gt;Clone it locally (&lt;code&gt;git clone git@github.com:jmeridth/jekyll.git&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Add upstream repo (&lt;code&gt;git remote add upstream git@github.com:mojombo/jekyll.git&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Code fix/feature on master branch&lt;ul&gt;
&lt;li&gt;don’t forget to add tests/specs and make sure they pass&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Commit code (&lt;code&gt;git add . &amp;amp;&amp;amp; git commit -m “awesome”&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Pull latest from upstream (&lt;code&gt;git pull upstream master&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Push your changes (&lt;code&gt;git push origin master&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;On &lt;a href="http://github.com"&gt;Github&lt;/a&gt; website&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The issue here is if you continue to work on your local master branch and push to your fork again, &lt;strong&gt;&lt;em&gt;BEFORE&lt;/em&gt;&lt;/strong&gt; the pull request is accepted and merged. Why is this an issue? It is an issue because any further commits on the branch that a pull request is based on will &lt;strong&gt;&lt;em&gt;AUTOMATICALLY&lt;/em&gt;&lt;/strong&gt; be added to the pull request. This usually ensures that you are requested to fix the pull request before it will be accepted.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GOOD SCENARIO:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fork repo ABC&lt;/li&gt;
&lt;li&gt;Clone it locally (&lt;code&gt;git clone git@github.com:jmeridth/jekyll.git&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Add upstream repo (&lt;code&gt;git remote add upstream git@github.com:mojombo/jekyll.git&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Create a feature/topic branch (`git checkout -b awesome_feature)&lt;/li&gt;
&lt;li&gt;Code fix/feature&lt;ul&gt;
&lt;li&gt;don’t forget to add tests/specs and make sure they pass&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Commit code on feature/topic branch (&lt;code&gt;git add . &amp;amp;&amp;amp; git commit -m “awesome”&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Checkout master (&lt;code&gt;git checkout master&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Pull latest from upstream (&lt;code&gt;git pull upstream master&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Checkout feature/topic branch (&lt;code&gt;git checkout awesome_feature&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Rebase your changes onto the latest changes in master (&lt;code&gt;git rebase master&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Push your fix/feature branch to your fork (&lt;code&gt;git push origin awesome_feature&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;On &lt;a href="http://github.com"&gt;Github&lt;/a&gt; website&lt;/li&gt;
&lt;/ul&gt;</description><category>git</category><category>github</category><guid>http://blog.jasonmeridth.com/posts/do-not-issue-pull-requests-from-your-master-branch/</guid><pubDate>Fri, 30 Mar 2012 05:00:00 GMT</pubDate></item></channel></rss>