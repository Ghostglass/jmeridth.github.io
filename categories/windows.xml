<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Jason Meridth's Blog (windows)</title><link>http://blog.jasonmeridth.com/</link><description></description><atom:link href="http://blog.jasonmeridth.com/categories/windows.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Mon, 10 Mar 2014 19:37:12 GMT</lastBuildDate><generator>Nikola &lt;http://getnikola.com/&gt;</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Dell Information Via Command Line</title><link>http://blog.jasonmeridth.com/posts/dell-information-via-command-line/</link><description>&lt;div&gt;&lt;p&gt;To get your Dell Service Tag from your workstation/laptop via command line:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;C:&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt;wmic csproduct get vendor,name,identifyingnumber
IdentifyingNumber    Name                Vendor
ABCDEF1              Latitude E6520      Dell Inc.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I looked for this and found it because my laptop was docked and I didn’t want to have to dock it to look on the bottom of the laptop  &lt;/p&gt;&lt;/div&gt;</description><category>dell</category><category>command line</category><category>windows</category><guid>http://blog.jasonmeridth.com/posts/dell-information-via-command-line/</guid><pubDate>Mon, 15 Oct 2012 05:00:00 GMT</pubDate></item><item><title>Git Achievements on Windows (Part 2)</title><link>http://blog.jasonmeridth.com/posts/git-achievements-on-windows-part-2/</link><description>&lt;div&gt;&lt;p&gt;&lt;a href="http://blog.jasonmeridth.com/git-achievements-on-windows"&gt;Part 1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I’m using Msysgit Bash CLI (up-to-date install instructions&lt;/p&gt;
&lt;p&gt;I’ve forked the git-achievements github repository&lt;/p&gt;
&lt;p&gt;notice it forks to a gh-pages branch, not a master branch&lt;/p&gt;
&lt;p&gt;this allows github to fire jekyll off against your github account and generate your git-achievements page&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;jasonmeridth@JASON-LAPTOP /c/code
&lt;span class="nv"&gt;$ &lt;/span&gt;git clone git@github.com:jmeridth/git-achievments.git
Cloning into git-achievements...
remote: Counting objects: 1168, &lt;span class="k"&gt;done&lt;/span&gt;.
remote: Compressing objects: 100% &lt;span class="o"&gt;(&lt;/span&gt;742/742&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
Receiving objects: 91% &lt;span class="o"&gt;(&lt;/span&gt;1063/1168&lt;span class="o"&gt;)&lt;/span&gt;
Receiving objects: 100% &lt;span class="o"&gt;(&lt;/span&gt;1168/1168&lt;span class="o"&gt;)&lt;/span&gt;, 155.28 KiB, &lt;span class="k"&gt;done&lt;/span&gt;.
Resolving objects: 100% &lt;span class="o"&gt;(&lt;/span&gt;801/801&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;cloned repository locally into my C:code folder (resulting in /c/code/git-achievements by Git Bash CLI path terms)&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;jasonmeridth@JASON-LAPTOP /c/code
&lt;span class="nv"&gt;$ &lt;/span&gt;vim ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;~/ (tilde %2B forward slash means home directory, where the .bashrc file needs to be)&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"$PATH:/c/code/git-achievements"&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;git&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"git-achievements"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;add the newly clone git-achievements directory to your PATH environment variable&lt;/p&gt;
&lt;p&gt;alias the git command to call git-achievements&lt;/p&gt;
&lt;p&gt;git-achievements calls the real git.exe, this just allows it to wrap it and intercept calls&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;jasonmeridth@JASON-LAPTOP /c/code
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;source means to refresh/reapply&lt;/p&gt;
&lt;p&gt;if you don’t do this, your new changes won’t take effect&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;jasonmeridth@JASON-LAPTOP /c/code
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$PATH&lt;/span&gt;
......:/c/code/git-achievements
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;this outputs your PATH environment variable content.&lt;/p&gt;
&lt;p&gt;Notice the git-achievements folder at the end. :)&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;jasonmeridth@JASON-LAPTOP /c/code
&lt;span class="nv"&gt;$ &lt;/span&gt;git config --global achievement.upload &lt;span class="s2"&gt;"true"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;this allows uploads to your fork, on the gh-pages branch&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;jasonmeridth@JASON-LAPTOP /c/code
&lt;span class="nv"&gt;$ &lt;/span&gt;git --version
git version 1.7.2.3.msysgit.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to ensure you didn’t break git&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;jasonmeridth@JASON-LAPTOP /c/code
&lt;span class="nv"&gt;$ &lt;/span&gt;git achievements --help
Git Achievements

you currently have:     1 achievements

Options:
    -l --list   Show all achievements
    -p --publish Publish existing achievemetns and push to origin.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;shows the git achievements help&lt;/p&gt;
&lt;p&gt;generates your first achievement as a “Student” (I already had mine)&lt;/p&gt;
&lt;p&gt;Hope you guys have as much fun as I did. Yeah, yeah, I’m a nerd. So what? ;)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.jasonmeridth.com/git-achievements"&gt;My Achievements&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>git</category><category>windows</category><guid>http://blog.jasonmeridth.com/posts/git-achievements-on-windows-part-2/</guid><pubDate>Wed, 21 Mar 2012 05:00:00 GMT</pubDate></item><item><title>Git-Achievements on Windows</title><link>http://blog.jasonmeridth.com/posts/git-achievements-on-windows/</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: &lt;em&gt;Needed to add newly clone git-achievements to your PATH env variable.  Otherwise it will push an index.html file to your current repo and not the git-achievements repo.  Thank you __&lt;a href="http://twitter.com/adymitruk"&gt;Adam_&lt;/a&gt;&lt;/em&gt; for finding that._&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; &lt;em&gt;Make sure you save your ~/.git-achievements-action.log and ~/.git-achievements.log files if you are transferring from your primary machine.  If you make these files mobile you will be able to use multiple machines.  I forgot mine and now have to start over with git-achievements.  Meh.  More fun.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I’m using Msysgit Bash CLI (&lt;a href="http://blog.jasonmeridth.com/blogs/jason_meridth/archive/2009/06/01/git-for-windows-developers-git-series-part-1.aspx"&gt;up-to-date install instructions&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I’ve forked the &lt;a href="http://github.com/icefox/git-achievements"&gt;git-achievements github repository&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;notice it forks to a gh-pages branch, not a master branch &lt;/li&gt;
&lt;li&gt;this allows github to fire jekyll off against your github account and generate your git-achievements page &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="clone_git_achievements" src="http://lostechies.com/jasonmeridth/files/2011/03/clone_git_achievements_thumb_44954553.png"&gt; &lt;/p&gt;
&lt;ul&gt;&lt;li&gt;cloned repository locally into my C:code folder (resulting in /c/code/git-achievements by Git Bash CLI path terms) &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="vim_bashrc" src="http://lostechies.com/jasonmeridth/files/2011/03/vim_bashrc_thumb_0EE93888.png"&gt; &lt;/p&gt;
&lt;ul&gt;&lt;li&gt;~/ (tilde + forward slash means home directory, where the .bashrc file needs to be) &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="vim_bashrc_export" src="http://lostechies.com/jasonmeridth/files/2011/03/vim_bashrc_export_thumb_18CE29F3.png"&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;add the newly clone git-achievements directory to your PATH environment variable &lt;/li&gt;
&lt;li&gt;alias the git command to call git-achievements &lt;/li&gt;
&lt;li&gt;git-achievements calls the real git.exe, this just allows it to wrap it and intercept calls &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="source_bashrc" src="http://lostechies.com/jasonmeridth/files/2011/03/source_bashrc_thumb_534929C7.png"&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;source means to refresh/reapply &lt;/li&gt;
&lt;li&gt;if you don’t do this, your new changes won’t take effect &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="echo_path" src="http://lostechies.com/jasonmeridth/files/2011/03/echo_path_thumb_38305AB9.png"&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;this outputs your PATH environment variable content. &lt;/li&gt;
&lt;li&gt;Notice the git-achievements folder at the end. :) &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="git_config" src="http://lostechies.com/jasonmeridth/files/2011/03/git_config_thumb_4133ADAB.png"&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;this allows uploads to your fork, on the gh-pages branch &lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="check_git_still_works" src="http://lostechies.com/jasonmeridth/files/2011/03/check_git_still_works_thumb_51CBA899.png"&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;to ensure you didn’t break git &lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="git_achievements_help" src="http://lostechies.com/jasonmeridth/files/2011/03/git_achievements_help_thumb_2BF58236.png"&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;shows the git achievements help &lt;/li&gt;
&lt;li&gt;generates your first achievement as a “Student” (I already had mine) &lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Hope you guys have as much fun as I did.  Yeah, yeah, I’m a nerd.  So what?  ;)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.jasonmeridth.com/git-achievements"&gt;http://blog.jasonmeridth.com/git-achievements&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Comments&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blog.jasonmeridth.com/posts/git-achievements-on-windows/#485" title="2010-09-25 21:51:29"&gt;Adam D. &lt;/a&gt;:&lt;/strong&gt; Hmmm.. can't get the uploading of achievements to work... Adam@ADAM-LAPTOP /c/dev/cqrs (BuildingManagement) $ git push Counting objects: 31, done. Delta compression using up to 2 threads. Compressing objects: 100% (16/16), done. Writing objects: 100% (16/16), 2.19 KiB, done. Total 16 (delta 15), reused 0 (delta 0) To git@scanit.unfuddle.com:scanit/cqrs.git fe265ce..81bafd5 master -&amp;gt; master &lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt; Git Achievement Unlocked! Apprentice Socialite (Level 1) pushed a branch to a remote repository using git push &lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt; Adam@ADAM-LAPTOP /c/dev/cqrs (BuildingManagement) $ git achievements -p cat: git-achievements: No such file or directory Global achievement.upload not set to true, updates left uncommited Adam@ADAM-LAPTOP /c/dev/cqrs (BuildingManagement) $ cd ../git-achievements/ Adam@ADAM-LAPTOP /c/dev/git-achievements (gh-pages) $ git commit -am "another achievment" &amp;amp;&amp;amp; git push # On branch gh-pages nothing to commit (working directory clean) Adam@ADAM-LAPTOP /c/dev/git-achievements (gh-pages) $ git status # On branch gh-pages nothing to commit (working directory clean) Adam@ADAM-LAPTOP /c/dev/git-achievements (gh-pages) $ cd - /c/dev/cqrs&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blog.jasonmeridth.com/posts/git-achievements-on-windows/#486" title="2010-09-25 23:02:27"&gt;Jason Meridth&lt;/a&gt;:&lt;/strong&gt; @Adam I updated post. I messed up on the .bashrc. Needed to add git-achievements to your PATH env. screenshots above. Sorry&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blog.jasonmeridth.com/posts/git-achievements-on-windows/#487" title="2010-09-25 23:23:14"&gt;Adam D. &lt;/a&gt;:&lt;/strong&gt; I did it but I still get this: Adam@ADAM-LAPTOP /c/dev/cqrs (BuildingManagement) $ git achievements -p Global achievement.upload not set to true, updates left uncommited Adam@ADAM-LAPTOP /c/dev/cqrs (BuildingManagement) $ git config -l core.symlinks=false core.autocrlf=false color.diff=auto pack.packsizelimit=2g help.format=html http.sslcainfo=/bin/curl-ca-bundle.crt sendemail.smtpserver=/bin/msmtp.exe merge.tool=kdiff3 mergetool.kdiff3.path=c:/Program Files (x86)/KDiff3/kdiff3.exe mergetool.kdiff3.cmd="c:/Program Files/Perforce/p4merge.exe" "$BASE" "$LOCAL" "$REMOTE" "$MERGED" user.name=Adam Dymitruk user.email=adam@dymitruk.com core.editor=vim core.autocrlf=false mergetool.keepbackup=true branch.autosetupmerge=true gui.recentrepo=C:/dev/scanitinternational achievment.upload=true &amp;lt;------------------------------------------- !!!! core.repositoryformatversion=0 core.filemode=false core.bare=false core.logallrefupdates=true core.symlinks=false core.ignorecase=true remote.origin.url=git@scanit.unfuddle.com:scanit/cqrs.git remote.origin.fetch=+refs/heads/&lt;em&gt;:refs/remotes/origin/&lt;/em&gt; branch.master.remote=origin branch.master.merge=refs/heads/master branch.autosetuprebase=always submodule.libs.url=git@github.com:adymitruk/altnetdllstack.git branch.FileStorage.remote=origin branch.FileStorage.merge=refs/heads/FileStorage branch.FileStorage.rebase=true remote.local.url=../chrisrepo remote.local.fetch=+refs/heads/&lt;em&gt;:refs/remotes/local/&lt;/em&gt; gui.wmstate=normal gui.geometry=887x427+75+75 171 192 branch.scheduler.remote=origin branch.scheduler.merge=refs/heads/scheduler branch.scheduler.rebase=true branch.EquipmentMaintenance.remote=origin branch.EquipmentMaintenance.merge=refs/heads/EquipmentMaintenance branch.EquipmentMaintenance.rebase=true&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blog.jasonmeridth.com/posts/git-achievements-on-windows/#488" title="2010-09-25 23:24:57"&gt;Adam D. &lt;/a&gt;:&lt;/strong&gt; Never mind. I can't spell :)&lt;/p&gt;&lt;/div&gt;</description><category>git</category><category>windows</category><guid>http://blog.jasonmeridth.com/posts/git-achievements-on-windows/</guid><pubDate>Sat, 25 Sep 2010 07:30:00 GMT</pubDate></item><item><title>WinSnap</title><link>http://blog.jasonmeridth.com/posts/winsnap/</link><description>&lt;div&gt;&lt;p&gt;I've used a few screen shot capturing tools and have even used the famous Alt-PrintScreen. &lt;/p&gt;
&lt;p&gt;The best FREE tool I've used lately is &lt;a href="http://www.ntwind.com/software/winsnap.html"&gt;WinSnap&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Windows Snapshot Maker" src="http://www.ntwind.com/assets/images/winsnap/winsnap_small.png"&gt;&lt;/p&gt;&lt;/div&gt;</description><category>tools</category><category>windows</category><guid>http://blog.jasonmeridth.com/posts/winsnap/</guid><pubDate>Tue, 02 Jan 2007 06:52:00 GMT</pubDate></item></channel></rss>